(()=>{"use strict";var e={328:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.Bird=void 0;var a=function(e){function t(t,n,r,o,a,i){var c=e.call(this,t,n,r,o,a,i)||this;return c.speedy=0,c.speedx=500,c.rotate=10,c.state=!1,c.depth=0,c}return o(t,e),t.prototype.update=function(e){var t=e/100;this.speedx>1.5&&(this.speedx=.05),this.y+=this.speedy*t+2*t*t,this.x+=this.speedx*t+10*t*t,this.speedy+=4,this.speedx+=20,this.speedy>0?this.rotate++:this.rotate--},t.prototype.reset=function(e,t){this.x=e,this.y=t,this.speedy=0,this.speedx=500},t.prototype.fly=function(){this.rotate=0,this.speedy=-60,this.speedx=500},t}(n(607).Sprite);t.Bird=a},815:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.Column=void 0;var a=function(e){function t(t,n,r,o,a){var i=e.call(this,t,n,r,o,a)||this;return i.blank=240,i.distance=350,i.columnspeed=2,i}return o(t,e),t.prototype.update=function(){for(var e=0;e<3;e++)this.x-=this.columnspeed},t.prototype.reset=function(){},t}(n(490).GameObject);t.Column=a},382:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var a=n(601),i=n(732),c=n(733),s=n(409),u=n(700),p=new(function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.score=new a.Score,r}return o(t,e),t.prototype.getScore=function(){return this.score},t}(i.CoreLoop))(800,900),l=new s.GameStartScene("GameStartScene",800,900,p.getInputHandler()),h=new c.GamePlayScene("GamePlayScene",800,900,p.getScore(),p.getInputHandler()),d=new u.GameOverScene("GameOverScene",800,900,p.getScore(),p.getInputHandler());p.addScene(l),p.addScene(h),p.addScene(d),p.start()},700:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.GameOverScene=void 0;var a=n(490),i=n(115),c=n(557),s=function(e){function t(t,n,r,o,i){var s=e.call(this,t,n,r,i)||this;s.d=!1,s.bGround=new a.GameObject(0,0,800,800,"background"),s.addgameObject(s.bGround),s.loadData("background","../../public/image/bg.png"),s.fGround=new a.GameObject(0,800,800,100,"floorground"),s.addgameObject(s.fGround),s.loadData("floorground","../../public/image/fg.png");var u=new a.GameObject(s.width/2-120,450,120,90,"newgame");s.addgameObject(u),s.loadData("newgame","../../public/image/newgame.png");var p=new a.GameObject(s.width/2-150,300,300,150,"best");s.addgameObject(p),s.loadData("best","../../public/image/best.png");var l=new a.GameObject(s.width/2-150,200,300,80,"gameover");s.addgameObject(l),s.loadData("gameover","../../public/image/gameover.png");var h=new a.GameObject(s.width/2+10,460,110,75,"toprankgame");s.addgameObject(h),s.loadData("toprankgame","../../public/image/toprankgame.png"),s.score=o;var d=String(s.score.getScore()).length;s.currentScore=new c.GameObjectText(s.width/2+95-10*d,370,"",s.score.getScore()),s.addgameObjectText(s.currentScore);var f=String(s.score.getMaxscore()).length;return s.maxScore=new c.GameObjectText(s.width/2+95-10*f,430,"",s.score.getMaxscore()),s.addgameObjectText(s.maxScore),s.inputHandler.on("pointerdown"+t,(function(e,t){if("GameOverScene"==s.scenes.getCurrentSceneName()){var n=s.getMousePosition(e,t);n[0]>=s.width/2-120&&n[0]<=s.width/2&&n[1]>=450&&n[1]<=540&&(s.scenes.changeScene("GamePlayScene"),s.score.setScore(0))}})),s}return o(t,e),t.prototype.update=function(e,t){this.score.addstoreScore(),this.currentScore.update(this.score.getScore()),this.maxScore.update(this.score.getMaxscore())},t.prototype.getMousePosition=function(e,t){var n=e.getBoundingClientRect();return[t.clientX-n.left,t.clientY-n.top]},t}(i.Scene);t.GameOverScene=s},733:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.GamePlayScene=void 0;var a=n(328),i=n(815),c=n(490),s=n(557),u=function(e){function t(t,n,r,o,u){var p=e.call(this,t,n,r,u)||this;p.count=0,p.bGround=new c.GameObject(0,0,800,800,"background"),p.addgameObject(p.bGround),p.loadData("background","../../public/image/bg.png"),p.fGround=new c.GameObject(0,800,800,100,"floorground"),p.addgameObject(p.fGround),p.loadData("floorground","../../public/image/fg.png"),p.bird=new a.Bird(100,400,70,55,"bird",["birdflyup","bird","birdflydown"]),p.addgameObject(p.bird),p.loadData("bird","../../public/image/bird.png"),p.loadData("birdflyup","../../public/image/birdflyup.png"),p.loadData("birdflydown","../../public/image/birdflydown.png"),p.loadData("column","../../public/image/column.png"),p.arrColumn=new Array(3),p.blank=240,p.distance=350,p.columnspeed=2;for(var l=1,h=0;h<6;h+=2){var d=Math.floor(Math.random()*(p.height-60-p.blank+1))+60;p.arrColumn[h]=new i.Column(p.width+l*p.distance,-p.height+d,70,900,"column"),p.arrColumn[h+1]=new i.Column(p.width+l*p.distance,d+p.blank,70,900,"column"),p.addgameObject(p.arrColumn[h]),p.addgameObject(p.arrColumn[h+1]),l++}return p.score=o,p.dataScore=new s.GameObjectText((p.width-200)/2,100,"Score: ",p.score.getScore()),p.addgameObjectText(p.dataScore),p.inputHandler.on("pointerdown"+t,(function(){"GamePlayScene"==p.scenes.getCurrentSceneName()&&(p.bird.fly(),p.count=0)})),p}return o(t,e),t.prototype.InputHandler=function(e,t,n){},t.prototype.getMousePosition=function(e,t){var n=e.getBoundingClientRect();return[t.clientX-n.left,t.clientY-n.top]},t.prototype.update=function(e,t){if(0==this.isGameOver(this.bird,this.arrColumn)){if(this.bird.update(t),this.arrColumn.forEach((function(e){e.update()})),this.arrColumn[0].x<-this.arrColumn[0].width){for(var n=0;n<=2;n+=2)this.arrColumn[n].x=this.arrColumn[n+2].x,this.arrColumn[n].y=this.arrColumn[n+2].y,this.arrColumn[n+1].x=this.arrColumn[n+3].x,this.arrColumn[n+1].y=this.arrColumn[n+3].y;var r=Math.floor(Math.random()*(this.height-60-this.blank+1))+60;this.arrColumn[4].x=this.arrColumn[2].x+this.distance,this.arrColumn[5].x=this.arrColumn[2].x+this.distance,this.arrColumn[4].y=-this.height+r,this.arrColumn[5].y=r+this.blank}this.count<=11&&(this.bird.updateFrame(),11==this.count&&this.bird.setCurrentFrame()),this.count++,this.score.update(this.bird,this.arrColumn,this.rectCollision),this.dataScore.update(this.score.getScore())}else{console.log("die"),this.bird.reset(200,200);var o=1;for(n=0;n<6;n+=2)this.arrColumn[n].x=this.width+o*this.distance,this.arrColumn[n+1].x=this.width+o*this.distance,o++;this.scenes.changeScene("GameOverScene")}},t.prototype.rectCollision=function(e,t){return e[0]<=t[0]+t[2]&&t[0]<=e[0]+e[2]&&e[1]<=t[1]+t[3]&&t[1]<=e[1]+e[3]},t.prototype.isGameOver=function(e,t){for(var n=0;n<6;n+=2){var r=[e.x,e.y,e.width,e.height],o=[t[n].x,t[n].y,t[n].width,t[n].height],a=[t[n+1].x,t[n+1].y,t[n+1].width,t[n+1].height];if(1==this.rectCollision(r,o)||1==this.rectCollision(r,a))return!0}return e.y+e.height<0||e.y+e.height>this.height},t}(n(115).Scene);t.GamePlayScene=u},409:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.GameStartScene=void 0;var a=n(490),i=function(e){function t(t,n,r,o){var i=e.call(this,t,n,r,o)||this;return i.d=!1,i.addgameObject(new a.GameObject(0,0,800,800,"background")),i.loadData("background","../../public/image/bg.png"),i.addgameObject(new a.GameObject(0,800,800,100,"floorground")),i.loadData("floorground","../../public/image/fg.png"),i.addgameObject(new a.GameObject(100,400,70,55,"bird")),i.loadData("bird","../../public/image/bird.png"),i.addgameObject(new a.GameObject(n/2-60,300,120,90,"newgame")),i.loadData("newgame","../../public/image/newgame.png"),i.addgameObject(new a.GameObject(n/2-100,200,200,90,"startgame")),i.loadData("startgame","../../public/image/startgame.png"),i.inputHandler.on("pointerdown"+t,(function(e,t){if("GameStartScene"==i.scenes.getCurrentSceneName()){var n=i.getMousePosition(e,t);n[0]>=i.width/2-60&&n[0]<=i.width/2-60+120&&n[1]>=300&&n[1]<=390&&i.scenes.changeScene("GamePlayScene")}})),i}return o(t,e),t.prototype.getMousePosition=function(e,t){var n=e.getBoundingClientRect();return[t.clientX-n.left,t.clientY-n.top]},t}(n(115).Scene);t.GameStartScene=i},732:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoreLoop=void 0;var r=n(829),o=n(650),a=n(873),i=function(){function e(e,t){this.scenes=new a.SceneManager,this.renderer=new o.Renderer(e,t),this.input=new r.InputHandler(this.scenes)}return e.prototype.start=function(){var e=this;this.scenes.startScene(),this.lastTime=window.performance.now(),requestAnimationFrame((function(){return e.loop()}))},e.prototype.loop=function(){var e=this,t=window.performance.now(),n=t-this.lastTime;this.input.processInput(),this.scenes.update(t,n),this.renderer.render(this.scenes.getCurrentScene()),this.lastTime=t,requestAnimationFrame((function(){return e.loop()}))},e.prototype.addScene=function(e){this.scenes.addScene(e),e.scenes=this.scenes},e.prototype.getInputHandler=function(){return this.input},e}();t.CoreLoop=i},490:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GameObject=void 0;t.GameObject=function(e,t,n,r,o){this.depth=0,this.x=e,this.y=t,this.width=n,this.height=r,this.imageKey=o}},557:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GameObjectText=void 0;var n=function(){function e(e,t,n,r){this.x=e,this.y=t,this.label=n,this.number=r}return e.prototype.update=function(e){this.number=e},e}();t.GameObjectText=n},580:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.GameStateManager=void 0,function(e){e[e.startGame=0]="startGame",e[e.playGame=1]="playGame",e[e.endGame=2]="endGame"}(n||(n={}));var r=function(){function e(){this.currentState=n.startGame}return e.prototype.setState=function(e){this.currentState=e},e.prototype.getState=function(){return this.currentState},e}();t.GameStateManager=r},829:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InputHandler=void 0;var n=function(){function e(e){var t=this;this.queueOfPointer=[],this.queueOfKeyBoard=[],this.scenes=e,this.callBacks=new Map,this.canvas=document.getElementsByTagName("canvas")[0],this.canvas.addEventListener("pointerdown",(function(e){t.queueOfPointer.push(e)})),this.canvas.addEventListener("keypress",(function(e){t.queueOfKeyBoard.push(e)}))}return e.prototype.on=function(e,t){this.callBacks.set(e,t)},e.prototype.processInput=function(){for(;this.queueOfPointer.length>0;){var e=this.queueOfPointer.pop(),t=e.type+this.scenes.getCurrentSceneName();this.callBacks.get(t)(this.canvas,e)}},e}();t.InputHandler=n},650:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function c(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,c)}s((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.Renderer=void 0;var o=function(){function e(e,t){document.body.appendChild(function(e,t){var n=document.createElement("div");return n.innerHTML='<div id="container" style="width:100%;height:900px">\n      <div style="margin: auto; width:800px; height:900px;">\n          <canvas  id="myChart" width='.concat(e," height=").concat(t,"></canvas>   \n      </div>\n     </div>"),n}(e,t)),this.canvas=document.getElementsByTagName("canvas")[0],this.ctx=this.canvas.getContext("2d"),this.ctx.font="30px consolas"}return e.prototype.render=function(e){var t=this;this.ctx.clearRect(0,0,e.width,e.height),e.getAllGameObject().sort((function(e,t){return e.depth-t.depth})).forEach((function(n){t.renderGameObject(n,e.getTexture(n.imageKey),e)})),e.getAllGameObjectText().forEach((function(e){t.renderTextObject(e)}))},e.prototype.renderTextObject=function(e){""==e.label?this.ctx.fillText(e.number.toString(),e.x,e.y):this.ctx.fillText(e.label+e.number,e.x,e.y)},e.prototype.renderRotatedObject=function(e,t){this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.rotate(+e.rotate*Math.PI/180),this.ctx.drawImage(t.getTexture(e.imageKey),0,0,e.width,e.height),this.ctx.restore()},e.prototype.renderGameObject=function(e,t,o){return n(this,void 0,void 0,(function(){var t;return r(this,(function(n){return this.ctx.save(),this.ctx.translate(e.x,e.y),t=e.rotate||0,this.ctx.rotate(t*Math.PI/180),this.ctx.drawImage(o.getTexture(e.imageKey),0,0,e.width,e.height),this.ctx.restore(),[2]}))}))},e}();t.Renderer=o},115:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Scene=void 0;var r=n(136),o=n(342),a=function(){function e(e,t,n,a){this.name=e,this.gameObject=new Array,this.gameObjectText=new Array,this.width=t,this.height=n,this.textureManager=new o.TextureManager,this.loader=new r.Loader,this.inputHandler=a}return e.prototype.preload=function(e){this.loader.loadImage(e)},e.prototype.loadData=function(e,t){this.preload(t),this.textureManager.addImage(e,t)},e.prototype.addgameObject=function(e){var t=this.gameObject.length;this.gameObject[t]=e},e.prototype.addgameObjectText=function(e){var t=this.gameObjectText.length;this.gameObjectText[t]=e},e.prototype.update=function(e,t){},e.prototype.getAllGameObjectText=function(){return this.gameObjectText[0]?this.gameObjectText:[]},e.prototype.getAllGameObject=function(){return this.gameObject[0]?this.gameObject:[]},e.prototype.InputHandler=function(e,t,n){},e.prototype.getTexture=function(e){return this.textureManager.getImage(e)},e}();t.Scene=a},873:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SceneManager=void 0;var r=n(580),o=function(){function e(){this.scenes=[],this.gameStateManager=new r.GameStateManager}return e.prototype.changeScene=function(e){this.setCurrentScene(e)},e.prototype.setCurrentScene=function(e){for(var t=0;t<this.scenes.length;t++)this.scenes[t].name==e&&(this.currentScene=this.scenes[t])},e.prototype.update=function(e,t){this.getCurrentScene().update(e,t)},e.prototype.addScene=function(e){this.scenes.push(e)},e.prototype.startScene=function(){this.currentScene=this.scenes[0]},e.prototype.getCurrentSceneName=function(){return this.currentScene.name},e.prototype.getCurrentScene=function(){return this.currentScene},e}();t.SceneManager=o},607:function(e,t,n){var r,o=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.Sprite=void 0;var a=function(e){function t(t,n,r,o,a,i){var c=e.call(this,t,n,r,o,a)||this;return c.currentFrameId=0,c.count=6,c.frameKeys=i,c}return o(t,e),t.prototype.setCurrentFrame=function(){this.imageKey=this.frameKeys[0]},t.prototype.updateFrame=function(){this.currentFrameId=this.currentFrameId>this.frameKeys.length-2?0:this.currentFrameId+1,this.imageKey=this.frameKeys[this.currentFrameId]},t}(n(490).GameObject);t.Sprite=a},342:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TextureManager=void 0;var n=function(){function e(){this.dataImage=new Map}return e.prototype.addImage=function(e,t){if(!this.dataImage.get(e)){var n=new Image;n.src=t,this.dataImage.set(e,n)}},e.prototype.getImage=function(e){return this.dataImage.get(e)},e}();t.TextureManager=n},136:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function c(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,c)}s((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.Loader=void 0;var o=function(){function e(){}return e.prototype.loadImage=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){return[2,new Promise((function(t,n){var r=document.createElement("img");r.src=e,r.onload=function(){t()},r.onerror=n}))]}))}))},e}();t.Loader=o},601:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Score=void 0;var n=function(){function e(){this.storeScore=[],this.score=0,this.addScore=!0,this.storeScore[0]=0}return e.prototype.addstoreScore=function(){var e=this.storeScore.length;this.storeScore[e]=this.score},e.prototype.getMaxscore=function(){return Math.max.apply(null,this.storeScore)},e.prototype.setScore=function(e){this.score=e},e.prototype.getScore=function(){return this.score},e.prototype.reset=function(){this.score=0,this.addScore=!0},e.prototype.update=function(e,t,n){for(var r=!1,o=0;o<6;o+=2){var a=[t[o].x+t[0].width,t[o+1].y-240,1,t[0].blank];if(1==n([e.x,e.y,e.width,e.height],a)){r=!0;break}}1==r?(1==this.addScore&&(this.score+=1),this.addScore=!1):this.addScore=!0},e}();t.Score=n}},t={};!function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}(382)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,